def operatorCall(num1,num2,operator):
    if(operator=='/'):
        eval=myDiv(num1,num2)
    elif(operator=='*'):
        eval=myMul(num1,num2)
    elif(operator=='+'):
        eval=myAdd(num1,num2)
    elif(operator=='-'):
        eval=mySub(num1,num2)
        
    return(eval)


def eval(numbersList, operatorsList):
    eval1=0
    finalSol=0
    if((operatorsList[0]=='/' and numbersList[1]==0)or (operatorsList[1]=='/' and numbersList[2]==0)):
        print("Cant divide by 0 :(")
        return 0
        
    elif((operatorsList[1] == '/'or operatorsList[1] =='*') and (operatorsList[0]=="+" or operatorsList[0]=='-')):
        eval1 = operatorCall(numbersList[1],numbersList[2],operatorsList[1])
        finalSol=operatorCall(numbersList[0],eval1,operatorsList[0])
    else:
        eval1 = operatorCall(numbersList[0],numbersList[1],operatorsList[0])
        finalSol=operatorCall(eval1,numbersList[2],operatorsList[1])
    numbersList.append(finalSol)
    operatorsList.append("=")
    print(numbersList[3])

def mySub( user_1,user_2): 
    """user defined function return the result of subtraction of two integers
    parameters : two 
    returns integer value
    """


    user_3 = user_1 - user_2
    return (user_3)

def myDiv( user_1,user_2): 
     """user defined function return the result of division of two integers
    parameters : two 
    returns integer value
    """
     user_3 = user_1 // user_2
     return (user_3)

def myAdd( user_1,user_2):
    """user defined function return the result of addition of two integers
    parameters : two 
    returns integer value
    """
    user_3 = user_1 + user_2
    return (user_3)
def myMul( user_1,user_2):
     """user defined function return the result of multiplication of two integers
    parameters : two 
    returns integer value
    """
     user_3 = user_1 * user_2
     return (user_3)


eval([5,00,555],['/',"*"])
eval([5,55,555],['+','+'])
eval([5,55,555],['/',"*"])
eval([5,55,555],['+',"/"])
eval([5,55,555],['+',"*"])
eval([5,55,555],['-',"+"])
eval([5,55,555],['-',"-"])
eval([5,55,555],['-',"/"])
eval([5,55,555],['-',"*"])
eval([5,55,555],['*',"+"])
